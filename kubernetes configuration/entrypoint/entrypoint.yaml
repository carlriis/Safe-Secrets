apiVersion: apps/v1
kind: Deployment
metadata:
  name: entrypoint
  labels:
    app: entrypoint
spec:
  selector:
    matchLabels:
      app: entrypoint
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: entrypoint
    spec:
      initContainers:
        - name: files-to-serve
          image: carlriis/react_app_safe_secrets
          volumeMounts:
            - name: web-files
              mountPath: /web_export
      containers:
        - name: nginx-exposer
          image: nginx
          imagePullPolicy: Always
          env:
            - name: API_URL
              value: "http://encryption-program:8000"
          ports:
            - containerPort: 80
          volumeMounts:
            - name: web-files
              mountPath: /home/www
            - name: nginx-conf
              mountPath: /etc/nginx/templates/
      volumes:
        - name: web-files
          emptyDir: {}
        - name: nginx-conf
          configMap:
            name: nginx-template-file
---
apiVersion: v1
kind: Service
metadata:
  name: entrypoint
spec:
  type: LoadBalancer
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: entrypoint
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-template-file
data:
  default.conf.template: |
    server {
      listen 80;
      server_name 192.0.2.0;
      location / {
        root /home/www;
        index index.html;
      }
      location ^~ /api/ {
        rewrite ^/api(.*)$ $1 break;
        proxy_pass ${API_URL}; 
      }
    }
