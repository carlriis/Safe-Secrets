apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      initContainers:
        - name: config
          image: redis
          command: ["bash"]
          args: ["/start/startup.sh"]
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis/
            - name: redis-config-file
              mountPath: /redis-tmp-init/
            - name: redis-starter-script
              mountPath: /start/
      containers:
        - name: redis
          image: redis
          command: ["redis-server"]
          args: ["/etc/redis/redis.conf"]
          ports:
            - containerPort: 6379
              name: redis
          volumeMounts:
            - name: data
              mountPath: /data
            - name: redis-config
              mountPath: /etc/redis/
      volumes:
        - name: redis-config
          emptyDir: {}
        - name: redis-config-file
          configMap:
            name: redis-config
        - name: redis-starter-script
          configMap:
            name: redis-starter-script

  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        storageClassName: standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Mi
        selector:
          matchLabels:
            for: redisData
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  clusterIP: None
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: redis
  selector:
    app: redis
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-starter-script
data:
  startup.sh: |
    mkdir /redis-tmp/
    cp /redis-tmp-init/redis.conf /redis-tmp/redis.conf

    echo "Checking if the cluster is live"
    if [ "$(redis-cli -h sentinel -p 5000 ping)" != "PONG" ]; then
      echo "No sentinel found. This might be initial startup"

      if [ "$(hostname)" = "redis-0" ]; then
        echo "I'm the master. Not chaning config file"
      else
        echo "I'm not the master. Making myself a slave"
        echo "slaveof redis-0.redis.redis.svc.cluster.local 6379" >> /redis-tmp/redis.conf
      fi
    else
      echo "Sentinel found, finding master"
      MASTER="$(redis-cli -h sentinel -p 5000 sentinel get-master-addr-by-name mymaster | grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
      echo "Master found : $MASTER, updating redis.conf"
      echo "slaveof $MASTER 6379" >> /redis-tmp/redis.conf
    fi

    cp /redis-tmp/redis.conf /etc/redis

    echo "$(ls /etc/redis/)"
